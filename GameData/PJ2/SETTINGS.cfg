PJ2_Settings
{
	//In this file you will find some optional patches.
	//To change a setting, rewrite the setting line after the " = " equals sign.
	//For example you would delete "False" and write "True." (No quotation marks.)
	//It's all case sensitive.
	//You have to restart the game to see changes.
	
	ArmstrongEVECities = False
	
	//Options are True & False.
	//Defaults to False.
	//When set to true, Armstrong will have EVE city lights. 
	//They look great from very high up--like actually fantastic!
	//They look awful from low orbits and the surface, though, which is why I turned them off by default.

	BinaryImplementation = Barycenter
	
	//Options are Barycenter, Primary, Period
	//Defaults to Barycenter.
	//	Barycenter mode visually appears the most realistic, but will result in counter-intuitive and somewhat buggy trajectories.
	//When set to Primary, objects which orbit around barycenters will be edited to orbit the primary object instead.
	//  Primary mode does not set a custom period, so all binary orbits will be too slow by a factor of close to the square root of 2.
	//	Primary mode is the least realistic, but also the least glitchy!
	//When set to Period, behavior is the same as Primary, except that the period is changed to be correct. 
	//	This will look slightly more accurate but will result in more glitchy SOI transitions. 
	//	It's probably slightly less glitchy than Barycenter mode.
	//
	//Affected objects are Gerro, Sandevistan, Beddul, Dopale, Phyre, and Wepor. 
	//Other near-binary objects have been implemented heirarchically by default.
	//Ilio Phosphol, Ilio Vespol, and the Ilio System Barycenter ignore this setting and will always be in a binary orbit.
	
	KronometerClock = ArmstrongDefault
	
	//Options are ArmstrongDefault, ArmstrongEarth, and ArmstrongDays.
	//ArmstrongDefault uses an exactly 6 hour clock which matches Armstrong's solar day.
	//ArmstrongEarth uses an exactly 24 hour clock, with four Armstrong solar days in one "day."
	//ArmstrongDays is a hybrid, with a 6 hour day and a 24 hour, 4-day "quad," replacing the year.
	
	
	//dont change this one lol.
	IntensityCurves = SabineLogarithmic1.5
	
	//Recommended option is SabineLogarithmic1.5
	//Options are Default, InverseLinear, InverseSquare, SabineLogarithmic1.0, and SabineLogarithmic1.5
	//Default uses an exponent of -0.25 for distances greater than sqrt[Lsol] kAU and -0.4 for distances closer than that.
	//result is a very gentle decrease in luminosity for more distant objects, but distant stars may appear too bright in one another's skies.
	//InverseSquare uses an exponent of -2, which is scientifically correct but super duper incompatible with rendering colors on a screen for human vision.
	//InverseLinear uses an exponent of -1, which can be justified after a fashion--the way colors are stored in a computer is by storing the square root, and then squaring it back when displaying it. Squaring an inverse square gives an inverse linear function. Idk.
	//SabineLogarithmic uses Sabine's logarithmic based light curves for more natural illumination that takes into account how our eyes work.
	//SabineLogarithmic1.0 and 1.5 differ by which exponent was used in the light curve generator spreadsheet.
	//the higher exponent represents a greater difference in brightness with distance.
}